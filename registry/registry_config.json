{
  "agents": [
    {
      "agent_id": "syntax-analyzer-001",
      "name": "Syntax Analysis Agent",
      "version": "1.0.0",
      "capabilities": [
        {
          "name": "syntax_check",
          "description": "Check code syntax and identify syntax errors",
          "parameters": {
            "language": "string",
            "strict_mode": "boolean"
          }
        },
        {
          "name": "linting",
          "description": "Perform code linting and style checking",
          "parameters": {
            "style_guide": "string",
            "max_line_length": "integer"
          }
        },
        {
          "name": "style_validation",
          "description": "Validate code style and formatting",
          "parameters": {
            "format_type": "string",
            "auto_fix": "boolean"
          }
        }
      ],
      "endpoint": "http://localhost:5001/analyze",
      "health_check_endpoint": "http://localhost:5001/health",
      "status": "active",
      "priority": 1,
      "max_concurrent_tasks": 5
    },
    {
      "agent_id": "security-scanner-001",
      "name": "Security Scanner Agent",
      "version": "1.0.0",
      "capabilities": [
        {
          "name": "vulnerability_scan",
          "description": "Scan for security vulnerabilities",
          "parameters": {
            "scan_depth": "string",
            "include_patterns": "array"
          }
        },
        {
          "name": "sql_injection_check",
          "description": "Check for SQL injection vulnerabilities",
          "parameters": {
            "database_type": "string",
            "query_analysis": "boolean"
          }
        },
        {
          "name": "xss_detection",
          "description": "Detect Cross-Site Scripting vulnerabilities",
          "parameters": {
            "context_analysis": "boolean",
            "sanitization_check": "boolean"
          }
        }
      ],
      "endpoint": "http://localhost:5002/analyze",
      "health_check_endpoint": "http://localhost:5002/health",
      "status": "active",
      "priority": 2,
      "max_concurrent_tasks": 3
    },
    {
      "agent_id": "performance-analyzer-001",
      "name": "Performance Analyzer Agent",
      "version": "1.0.0",
      "capabilities": [
        {
          "name": "complexity_analysis",
          "description": "Analyze code complexity and performance",
          "parameters": {
            "complexity_threshold": "integer",
            "include_nested": "boolean"
          }
        },
        {
          "name": "optimization_suggestions",
          "description": "Suggest performance optimizations",
          "parameters": {
            "optimization_level": "string",
            "include_benchmarks": "boolean"
          }
        },
        {
          "name": "memory_analysis",
          "description": "Analyze memory usage patterns",
          "parameters": {
            "track_allocation": "boolean",
            "leak_detection": "boolean"
          }
        }
      ],
      "endpoint": "http://localhost:5003/analyze",
      "health_check_endpoint": "http://localhost:5003/health",
      "status": "active",
      "priority": 3,
      "max_concurrent_tasks": 4
    },
    {
      "agent_id": "documentation-agent-001",
      "name": "Documentation Quality Agent",
      "version": "1.0.0",
      "capabilities": [
        {
          "name": "docstring_validation",
          "description": "Validate docstring presence and format",
          "parameters": {
            "docstring_style": "string",
            "require_examples": "boolean"
          }
        },
        {
          "name": "comment_analysis",
          "description": "Analyze comment quality and coverage",
          "parameters": {
            "min_comment_density": "float",
            "check_clarity": "boolean"
          }
        },
        {
          "name": "readability_assessment",
          "description": "Assess code readability and naming",
          "parameters": {
            "naming_convention": "string",
            "readability_threshold": "float"
          }
        }
      ],
      "endpoint": "http://localhost:5004/analyze",
      "health_check_endpoint": "http://localhost:5004/health",
      "status": "active",
      "priority": 4,
      "max_concurrent_tasks": 6
    },
    {
      "agent_id": "test-coverage-001",
      "name": "Test Coverage Agent",
      "version": "1.0.0",
      "capabilities": [
        {
          "name": "coverage_analysis",
          "description": "Analyze test coverage and completeness",
          "parameters": {
            "coverage_threshold": "float",
            "include_branch_coverage": "boolean"
          }
        },
        {
          "name": "test_quality_assessment",
          "description": "Assess test quality and effectiveness",
          "parameters": {
            "test_framework": "string",
            "quality_metrics": "array"
          }
        },
        {
          "name": "missing_test_suggestions",
          "description": "Suggest missing test cases",
          "parameters": {
            "suggestion_depth": "string",
            "include_edge_cases": "boolean"
          }
        }
      ],
      "endpoint": "http://localhost:5005/analyze",
      "health_check_endpoint": "http://localhost:5005/health",
      "status": "active",
      "priority": 5,
      "max_concurrent_tasks": 4
    }
  ],
  "registry_config": {
    "health_check_interval": 30,
    "max_retry_attempts": 3,
    "timeout_seconds": 30,
    "auto_discovery": true,
    "load_balancing": "round_robin"
  }
}
